{"ast":null,"code":"var _jsxFileName = \"/home/civlon/code/demonstrator_app/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Spinner } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState({});\n\n  const getTestData = data => {\n    setData(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"hier sollte es stehen: \", JSON.stringify(data)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GetTestDataButton, {\n      getTestData: getTestData,\n      children: \"Get Test Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0PQhZyvNHTQmyp/cNfIsZk8MtX8=\");\n\n_c = App;\nexport default App;\n\nfunction GetTestDataButton(_ref) {\n  _s2();\n\n  let {\n    children,\n    getTestData,\n    ...props\n  } = _ref;\n  const [isButtonLoading, setIsButtonLoading] = useState(false);\n\n  const handleOnClick = async () => {\n    setIsButtonLoading(true);\n    await fetch(\"/getTestData\").then(res => res.json()).then(data => {\n      getTestData(data);\n    }, []);\n    setIsButtonLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: async () => await handleOnClick(),\n    className: \"button\",\n    ...props,\n    children: isButtonLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 26\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(GetTestDataButton, \"fsAI7PCwY1J7QfcEjhYoWyy1VIM=\");\n\n_c2 = GetTestDataButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"GetTestDataButton\");","map":{"version":3,"names":["React","useState","useEffect","Button","Spinner","App","data","setData","getTestData","JSON","stringify","GetTestDataButton","children","props","isButtonLoading","setIsButtonLoading","handleOnClick","fetch","then","res","json"],"sources":["/home/civlon/code/demonstrator_app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Button, Spinner } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [data, setData] = useState({})\n\n  const getTestData = (data) => {\n    setData(data)\n  }\n\n  return (\n    <div>\n      <p>hier sollte es stehen: {JSON.stringify(data)}</p>\n      <GetTestDataButton getTestData={getTestData}>Get Test Data</GetTestDataButton>\n    </div>\n  )\n\n}\n\nexport default App\n\nfunction GetTestDataButton({ children, getTestData, ...props }) {\n  const [isButtonLoading, setIsButtonLoading] = useState(false);\n\n  const handleOnClick = async () => {\n    setIsButtonLoading(true);\n    await fetch(\"/getTestData\").then(res => res.json()).then(data => { getTestData(data) }, [])\n    setIsButtonLoading(false);\n  }\n\n  return (\n    <Button onClick={async () => await handleOnClick()} className=\"button\" {...props}>\n      {isButtonLoading ? <Spinner /> : children}\n    </Button>\n  );\n}"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,iBAAhC;AACA,OAAO,sCAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;EAEA,MAAMO,WAAW,GAAIF,IAAD,IAAU;IAC5BC,OAAO,CAACD,IAAD,CAAP;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE;MAAA,sCAA2BG,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA3B;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,iBAAD;MAAmB,WAAW,EAAEE,WAAhC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAdQH,G;;KAAAA,G;AAgBT,eAAeA,GAAf;;AAEA,SAASM,iBAAT,OAAgE;EAAA;;EAAA,IAArC;IAAEC,QAAF;IAAYJ,WAAZ;IAAyB,GAAGK;EAA5B,CAAqC;EAC9D,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,KAAD,CAAtD;;EAEA,MAAMe,aAAa,GAAG,YAAY;IAChCD,kBAAkB,CAAC,IAAD,CAAlB;IACA,MAAME,KAAK,CAAC,cAAD,CAAL,CAAsBC,IAAtB,CAA2BC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAlC,EAA8CF,IAA9C,CAAmDZ,IAAI,IAAI;MAAEE,WAAW,CAACF,IAAD,CAAX;IAAmB,CAAhF,EAAkF,EAAlF,CAAN;IACAS,kBAAkB,CAAC,KAAD,CAAlB;EACD,CAJD;;EAMA,oBACE,QAAC,MAAD;IAAQ,OAAO,EAAE,YAAY,MAAMC,aAAa,EAAhD;IAAoD,SAAS,EAAC,QAA9D;IAAA,GAA2EH,KAA3E;IAAA,UACGC,eAAe,gBAAG,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAH,GAAiBF;EADnC;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;IAdQD,iB;;MAAAA,iB"},"metadata":{},"sourceType":"module"}